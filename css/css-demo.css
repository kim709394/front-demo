/* 代码可大写可小写，推荐小写 
    标签选择器，选择p，div的标签
*/
h4,h5 {
    /* 字体大小,可以是绝对长度也可以是相对长度，建议使用相对长度；
       绝对长度：in()英寸，cm(厘米)，mm(毫米)，pt(点)
       相对长度：px(像素,最常用)，em(倍数，继承自祖先元素设置的字号的倍数)，%(百分比，继承自祖先元素设置的字号的百分比)
       如果不设置字号，不同的浏览器有自己的默认字号，chrome、IE的默认字号为16px,
       不同浏览器也有自己的最小字号，如果设置的字号小于最小字号，则会以浏览器最小字号加载，0除外，chrome的最小字号是8px，
       IE的最小字号是1px，
       建议网页的最小字号是12px，低于12px会有浏览器兼容问题，现在网页中普遍使用14px+
       尽量使用偶数字号，12px、14px、16px，因为ie6等老版本浏览器奇数字号会有bug
    */
    font-size: 30px;    
    /* 字体，从前往后加载，只会加载其中一个，找到浏览器支持的字体则加载，
    如果不支持会继续往后加载，如果不设置或者浏览器都不支持，则会加载浏览器默认字体 浏览器支持的字体不是存在浏览器中的，而是客户端
    电脑字体，由于不同用户的电脑的字体库不一样，因此在最后一定要设置一个所有用户都有的通用字体，一般选择"宋体"作为中文备用字体
    "Arial"作为英文备用字体，通常中文字体都能兼容英文，但是英文则不一定兼容中文，因此建议把英文字体写在中文字体前面*/
    font-family: "Arial","宋体";    
    color: red; /* 标签内字体颜色 */
    color: rgb(255, 0, 255);    /*rgb方式书写  */
    color: #f00; /* 16进制写法 */
}
/* 类选择器 class属性值不要求唯一的，以英文开头，数字下划线组成,属性值可以设置多个，以空格隔开*/
.div {
    width: 200px;   /* 盒子宽度 */
    height: 200px;  /* 盒子高度 */
    background-color: green;    /* 盒子背景色 */
}
/* id选择器，id属性值是唯一的，以英文开头，数字下划线组成，一般不会使用在css上，使用在js上*/
#id {
    width: 300px;
    height: 300px;
    background-color: aquamarine;
}
/* 导入其他css文件 */
/* @import url(css-demo2.css); */
/* 通配符选择器，选择包含html标签的所有标签，这会导致浏览器加载全部标签，将一些不需要加载的也加载一次，导致性能变慢，一般大型网站不使用
    小型网站代码量少问题不大。
*/
* {
    margin: 0;  /* 所有标签外边距设置为0 */
    padding: 0; /* 所有标签内边距设置为0 */
}
/* 后代选择器,以空格隔开表示后一个标签选择器是前一个标签选择器的子集，不一定是父子关系，也可以是祖孙关系 */
.box1 ul li p {
    font-size: 20px;
    color: aqua;
}
/* 交集选择器,写法：两个选择器紧挨在一起，只要标签满足两种选择器条件才能被选择，可以和其他高级选择器组合使用，
    可以连续编写交集选择器，但是IE6以下浏览器不支持
*/
div.box2 {
    color: coral;
}
/* 并集选择器,以逗号分隔，满足两个选择器其中一个就会被选择，“或”关系 */
.box3,.box4 {
    color: bisque;
}
/* 标签继承性,标签会默认继承祖先元素的样式，但是只能继承于文字相关的样式，其他样式不能继承,如果子孙标签也有选择器指定样式，那么以
    子孙标签样式为准
    如果子孙标签继承了多个祖先元素的样式，那么将是就近原则，离标签越近的先被选中。
    如果选中的祖先级元素距离一样，那么按照层叠性规则判断权重。
*/
.box5 {
    width: 250px;
    height: 250px;
    background-color: #f00;
    font-size: 25px;
    color: aliceblue;
}
.p1 {
    width: 250px;
    height: 50px;
    font-size: 5px;
    background-color: aqua;
    color: blue;
}
/* 层叠性：当标签被多个选择器选中时，只能被一种选择器加载，根据选择器的权重判断最终选择器，范围越大，权重越小，权重越大的选择器被选中
   权重排序： 
   基础选择器：* < 标签选择器< 类选择器 < id选择器
   高级选择器：比较选择器的个数，个数多的被选择，比较顺序：(id个数>类的个数>标签的个数)，如果前面比较出大小，则不用比较后面的，否则往后比较
   如果权重一样，那么看书写顺序，后书写的覆盖前书写的,如果是并集，则看成是多个选择器
*/
/* !importance关键字,如果样式后面加了!importance关键字，那么权重最大
    在就近原则中，importance关键字会失效。importance关键字不能提升选择器的权重，只能提升某条属性的权重到最大
    行内式样式的权重最高，但是低于importance
*/
.box6 .p2 {
    color: #f00;
}
.p2 {
    color: blue !important;
}
img {
    width: 1000px;
    height: 500px;
}
